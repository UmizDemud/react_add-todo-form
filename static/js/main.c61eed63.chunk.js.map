{"version":3,"sources":["components/AddTodoForm/AddTodoForm.tsx","api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["ChangeType","id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","AddTodoForm","handleSubmit","users","useState","setTitle","setUser","setCompleted","isUserSelected","isTitle","errors","setErrors","clearForm","useCallback","handleChange","e","field","TITLE","target","value","prev","USER","Number","parseInt","onSubmit","preventDefault","action","method","htmlFor","type","onChange","placeholder","disabled","item","checked","COMPLETED","onClick","App","todosFromServer","setTodos","newTodo","Math","max","usersFromServer","find","ReactDOM","render","document","getElementById"],"mappings":"sLAIKA,E,4CCJU,G,MAAA,CACb,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,OCVCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKL,OAA7C,SACGK,EAAKP,QCDGU,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,0BACE,UAASA,EAAKZ,GACdS,UAAS,kBAAaG,EAAKP,UAAY,uBAAyB,IAFlE,UAIE,oBAAII,UAAU,kBAAd,SACGG,EAAKR,QAGPQ,EAAKJ,MACJ,cAAC,EAAD,CAAUA,KAAMI,EAAKJ,WCVdK,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASL,UAAU,WAAnB,SACGK,EAAMC,KACL,SAAAH,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKZ,U,gBLP7BD,O,iBAAAA,I,eAAAA,I,0BAAAA,M,KAeE,IAAMiB,EAAc,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,MAC1C,EAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAwBD,mBAAS,GAAjC,mBAAOX,EAAP,KAAaa,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOd,EAAP,KAAkBiB,EAAlB,KACA,EAA4BH,mBAAS,CACnCI,gBAAgB,EAChBC,SAAS,IAFX,mBAAOC,EAAP,KAAeC,EAAf,KAKMC,EAAYC,uBAChB,WACER,EAAS,IACTC,EAAQ,GACRC,GAAa,KAEf,IAGIO,EAAeD,uBACnB,SACEE,EACAC,GAEA,OAAQA,GACN,KAAKhC,EAAWiC,MACdZ,EAASU,EAAEG,OAAOC,OAClBR,GAAU,SAAAS,GAAI,MAAK,CACjBZ,eAAgBY,EAAKZ,eACrBC,SAAS,MAEX,MACF,KAAKzB,EAAWqC,KACdf,EAAQgB,OAAOC,SAASR,EAAEG,OAAOC,MAAO,KACxCR,GAAU,SAAAS,GAAI,MAAK,CACjBZ,gBAAgB,EAChBC,QAASW,EAAKX,YAEhB,MACF,QACEF,GAAa,SAAAa,GAAI,OAAKA,QAGzB,IAGCI,EAAW,SACfT,GAEAA,EAAEU,iBACFd,EAAU,CACRH,iBAAkBf,EAClBgB,UAAWpB,IAGRI,GAASJ,IAIda,EACET,EACAJ,EACAC,GAEFsB,MAGF,OACE,uBACEc,OAAO,aACPhC,UAAU,OACViC,OAAO,OACPH,SAAU,SAAAT,GAAC,OAAIS,EAAST,IAJ1B,UAME,oBACErB,UAAU,cADZ,2BAKA,sBAAKA,UAAU,YAAf,UACE,uBACEkC,QAAQ,QACRlC,UAAU,mBAFZ,oBAMA,uBACET,GAAG,QACHS,UAAU,mBACVR,KAAK,QACL2C,KAAK,OACLV,MAAO9B,EACP,UAAQ,aACRyC,SAAU,SAAAf,GAAC,OAAID,EAAaC,EAAG/B,EAAWiC,QAC1Cc,YAAY,oBAEZrB,EAAOD,SACP,sBAAMf,UAAU,QAAhB,qCAMJ,sBAAKA,UAAU,YAAf,UACE,yBACEA,UAAU,mBACVoC,SAAU,SAAAf,GAAC,OAAID,EAAaC,EAAG/B,EAAWqC,OAC1C,UAAQ,aACRF,MAAO1B,EAJT,UAME,wBACEC,UAAU,oBACVyB,MAAO,EAEPa,UAAQ,EAJV,0BAGO,GAKN7B,EAAMH,KAAI,SAAAiC,GAAI,OACb,wBAEEd,MAAOc,EAAKhD,GAFd,SAIGgD,EAAK/C,MAHD+C,EAAK9C,iBAOduB,EAAOF,gBACP,sBAAMd,UAAU,QAAhB,qCAMJ,sBACEA,UAAU,8BADZ,UAGE,sBAAKA,UAAU,uBAAf,UACE,uBACEA,UAAU,sBACVmC,KAAK,WACL3C,KAAK,YACLD,GAAG,YACHiD,QAAS5C,EACTwC,SAAU,SAAAf,GAAC,OAAID,EAAaC,EAAG/B,EAAWmD,cAE5C,uBACEP,QAAQ,YACRlC,UAAU,wCAFZ,2BAQF,wBACEmC,KAAK,SACLnC,UAAU,oBACV,UAAQ,eACR0C,QAAS,SAAArB,GAAC,OAAIS,EAAST,IAJzB,wBMpKKsB,EAAoB,WAC/B,MAA0BjC,mBAASkC,GAAnC,mBAAOvC,EAAP,KAAcwC,EAAd,KAEMrC,EAAeW,uBAAY,SAC/BpB,EACAJ,EACAC,GAEAiD,GAAS,SAAAnB,GACP,IAAMoB,EAAU,CACdvD,GAAIwD,KAAKC,IAAL,MAAAD,KAAI,YAAQrB,EAAKpB,KAAI,SAAAiC,GAAI,OAAIA,EAAKhD,QAAO,EAC7CI,QACAE,OAAQE,EACRH,aAGF,MAAM,GAAN,mBACK8B,GADL,CAEEoB,SAGH,IAEH,OACE,qBAAK9C,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAaS,MAAOwC,EAAiBzC,aAAcA,IAEnD,oBAAIR,UAAU,eAEd,cAAC,EAAD,CAAUK,MAAOA,EAAMC,KAAI,SAAAH,GAAI,kCAC1BA,GAD0B,IAE7BJ,KAAMkD,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKhD,KAAOY,EAAKN,WAAW,kBCtCzEsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c61eed63.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\nimport { User } from '../../types/User';\nimport './index.scss';\n\nenum ChangeType {\n  TITLE,\n  USER,\n  COMPLETED,\n}\n\ntype Props = {\n  handleSubmit: (\n    user: number,\n    title: string,\n    completed: boolean,\n  ) => void;\n  users: User[],\n};\n\nexport const AddTodoForm = ({ handleSubmit, users }: Props) => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [errors, setErrors] = useState({\n    isUserSelected: true,\n    isTitle: true,\n  });\n\n  const clearForm = useCallback(\n    () => {\n      setTitle('');\n      setUser(0);\n      setCompleted(false);\n    },\n    [],\n  );\n\n  const handleChange = useCallback(\n    (\n      e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n      field: ChangeType,\n    ) => {\n      switch (field) {\n        case ChangeType.TITLE:\n          setTitle(e.target.value);\n          setErrors(prev => ({\n            isUserSelected: prev.isUserSelected,\n            isTitle: true,\n          }));\n          break;\n        case ChangeType.USER:\n          setUser(Number.parseInt(e.target.value, 10));\n          setErrors(prev => ({\n            isUserSelected: true,\n            isTitle: prev.isTitle,\n          }));\n          break;\n        default: // ChangeType.COMPLETED\n          setCompleted(prev => !prev);\n          break;\n      }\n    }, [],\n  );\n\n  const onSubmit = (\n    e: React.SyntheticEvent | React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    e.preventDefault();\n    setErrors({\n      isUserSelected: !!user,\n      isTitle: !!title,\n    });\n\n    if (!user || !title) {\n      return;\n    }\n\n    handleSubmit(\n      user,\n      title,\n      completed,\n    );\n    clearForm();\n  };\n\n  return (\n    <form\n      action=\"/api/users\"\n      className=\"form\"\n      method=\"POST\"\n      onSubmit={e => onSubmit(e)}\n    >\n      <h1\n        className=\"form__title\"\n      >\n        Add todo form\n      </h1>\n      <div className=\"formfield\">\n        <label\n          htmlFor=\"title\"\n          className=\"formfield__label\"\n        >\n          Title:\n        </label>\n        <input\n          id=\"title\"\n          className=\"formfield__input\"\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          data-cy=\"titleInput\"\n          onChange={e => handleChange(e, ChangeType.TITLE)}\n          placeholder=\"Enter title...\"\n        />\n        {!errors.isTitle && (\n          <span className=\"error\">\n            Please enter a title\n          </span>\n        )}\n      </div>\n\n      <div className=\"formfield\">\n        <select\n          className=\"formfield__input\"\n          onChange={e => handleChange(e, ChangeType.USER)}\n          data-cy=\"userSelect\"\n          value={user}\n        >\n          <option\n            className=\"formfield__option\"\n            value={0}\n            key={0}\n            disabled\n          >\n            Choose a user\n          </option>\n          {users.map(item => (\n            <option\n              key={item.username}\n              value={item.id}\n            >\n              {item.name}\n            </option>\n          ))}\n        </select>\n        {!errors.isUserSelected && (\n          <span className=\"error\">\n            Please choose a user\n          </span>\n        )}\n      </div>\n\n      <div\n        className=\"formfield formfield__submit\"\n      >\n        <div className=\"formfield__completed\">\n          <input\n            className=\"formfield__checkbox\"\n            type=\"checkbox\"\n            name=\"completed\"\n            id=\"completed\"\n            checked={completed}\n            onChange={e => handleChange(e, ChangeType.COMPLETED)}\n          />\n          <label\n            htmlFor=\"completed\"\n            className=\"formfield__label formfield__label--cb\"\n          >\n            :Completed\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"formfield__button\"\n          data-cy=\"submitButton\"\n          onClick={e => onSubmit(e)}\n        >\n          Add\n        </button>\n      </div>\n\n    </form>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }: Props) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }: Props) => (\n  <article\n    data-id={todo.id}\n    className={`TodoInfo${todo.completed ? ' TodoInfo--completed' : ''}`}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }: Props) => (\n  <section className=\"TodoList\">\n    {todos.map(\n      todo => <TodoInfo key={todo.id} todo={todo} />,\n    )}\n  </section>\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm';\n\nexport const App: React.FC<{}> = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const handleSubmit = useCallback((\n    user: number,\n    title: string,\n    completed: boolean,\n  ) => {\n    setTodos(prev => {\n      const newTodo = {\n        id: Math.max(...prev.map(item => item.id)) + 1,\n        title,\n        userId: user,\n        completed,\n      };\n\n      return ([\n        ...prev,\n        newTodo,\n      ]);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"container\">\n        <AddTodoForm users={usersFromServer} handleSubmit={handleSubmit} />\n\n        <hr className=\"App__break\" />\n\n        <TodoList todos={todos.map(todo => ({\n          ...todo,\n          user: usersFromServer.find(item => item.id === todo.userId) || null,\n        }))}\n        />\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}